{"ast":null,"code":"var _jsxFileName = \"/Users/adam/projects/timer/timer-countdown/src/Stopwatch.js\";\nimport React, { Component } from 'react';\n\nclass Stopwatch extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      timerOn: false,\n      count: 0\n    };\n\n    this.startTimer = () => {\n      this.setState({\n        timerOn: true\n      });\n      this.timer = setInterval(() => {\n        this.setState(prevState => ({\n          count: prevState.count + 1\n        }));\n      }, 1000);\n    };\n\n    this.stopTimer = () => {\n      clearInterval(this.timer);\n      this.setState({\n        timerOn: false\n      });\n    };\n\n    this.resetTimer = () => {\n      if (this.state.timerOn === false) {\n        this.setState({\n          count: 0\n        });\n      }\n    };\n  }\n\n  render() {\n    const _this$state = this.state,\n          count = _this$state.count,\n          timerOn = _this$state.timerOn;\n    let seconds = (\"0\" + Math.floor(count % 60) % 60).slice(-2);\n    let minutes = (\"0\" + Math.floor(count / 60 % 60)).slice(-2);\n    let hours = (\"0\" + Math.floor(count / 3600 % 60)).slice(-2);\n    return React.createElement(\"div\", {\n      className: \"Timer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"Stopwatch-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, \"Stopwatch\"), React.createElement(\"div\", {\n      className: \"Stopwatch-display\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, hours, \" : \", minutes, \" : \", seconds), timerOn === false && count === 0 && React.createElement(\"button\", {\n      className: \"Button-start\",\n      onClick: this.startTimer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, \"Start\"), timerOn === true && React.createElement(\"button\", {\n      className: \"Button-stop\",\n      onClick: this.stopTimer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, \"Stop\"), timerOn === false && count > 0 && React.createElement(\"button\", {\n      className: \"Button-start\",\n      onClick: this.startTimer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, \"Continue\"), timerOn === false && count > 0 && React.createElement(\"button\", {\n      className: \"Button-reset\",\n      onClick: this.resetTimer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, \"Reset\"));\n  }\n\n}\n\nexport default Stopwatch;","map":{"version":3,"sources":["/Users/adam/projects/timer/timer-countdown/src/Stopwatch.js"],"names":["React","Component","Stopwatch","state","timerOn","count","startTimer","setState","timer","setInterval","prevState","stopTimer","clearInterval","resetTimer","render","seconds","Math","floor","slice","minutes","hours"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\n\nclass Stopwatch extends Component {\n    state = {\n      timerOn: false,\n      count: 0\n    }\n\n  startTimer = () => {\n    this.setState({\n      timerOn: true\n    })\n    this.timer = setInterval(() => {\n      this.setState(prevState => ({\n      count: prevState.count + 1\n    }))\n    }, 1000)\n  }\n\n  stopTimer = () => {\n    clearInterval(this.timer)\n    this.setState({ timerOn: false })\n  }\n\n  resetTimer = () => {\n    if (this.state.timerOn === false) {\n      this.setState({\n        count: 0\n      })\n    }\n  }\n\n  render () {\n    const { count, timerOn } = this.state\n    let seconds = (\"0\" + (Math.floor(count % 60) % 60)).slice(-2)\n    let minutes = (\"0\" + Math.floor((count / 60) % 60)).slice(-2)\n    let hours = (\"0\" + Math.floor((count / 3600) % 60)).slice(-2)\n\n\n    return (\n      <div className=\"Timer\">\n        <div className=\"Stopwatch-header\">Stopwatch</div>\n        <div className=\"Stopwatch-display\">\n          { hours } : { minutes } : { seconds }\n        </div>\n\n      {timerOn === false && count === 0 &&\n        (<button className=\"Button-start\" onClick={ this.startTimer }>Start</button>\n      )}\n      {timerOn === true &&\n        (<button className=\"Button-stop\" onClick={ this.stopTimer }>Stop</button>\n      )}\n      {timerOn === false && count > 0 &&\n        (<button className=\"Button-start\" onClick={ this.startTimer }>Continue</button>\n      )}\n      {timerOn === false && count > 0 &&\n        (<button className=\"Button-reset\" onClick={ this.resetTimer }>Reset</button>\n      )}\n      </div>\n    )\n  }\n}\n\nexport default Stopwatch\n"]},"metadata":{},"sourceType":"module"}